BYPS Version History

9.11

- BYPS-73: OpenAPI schemas for API classes could be generated as "String" with description "Unsupported schema". 
  Updated to commons-fileupload-1.5, gson-2.10

9.10

- BYPS-72: Could not connect to AWS load balancer via JcnnClientFactory because additional AWS cookies were
  ignored. Still fails to connect via AsfClientFactory because Apache HTTP Client cannot parse AWS cookies:
  ...MalformedCookieException: Invalid 'expires' attribute...
  Use default cookie manager if registered at CookieHandler.getDefault().

9.09

- BYPS-64: JS compressor closure-compiler (google) generated defect minimized JS.

9.08

- BYPS-62: BSerializer classes could not be loaded in an OSGi bundle. 
  A custom class loader can be assigned to BRegistry. Example:
  client.getTransport().getProtocol().getRegistry().setClassLoader(TestRemoteEnums.class.getClassLoader());

9.07

- BYPS-61: Classes or methods wit default values for REST calls could not be compiled in C#. 

9.06

- BYPS-60: Annotation javax.ws.rs.DefaultValue can assign a default value to method parameters.
  Those method parameters can be omitted in REST calls.

9.05

- BYPS-58: Avoid multiple declarations of mbAllMembers in constant classes.

9.04

- BYPS-57: Enum member used in a class that itself is used as a constant object caused NPE in generator.
  C++ generator printed long values with invalid suffix. 

9.03

- BYPS-56: Escape C# member variable if it is named by a keyword (e.g. "namespace").  

9.00

- BYPS-50: Provide REST calls for BYPS APIs and generate OpenAPI documentation. 

8.47

- BYPS-53: Do not solely rely on System.identityHashCode(Object) to uniquely identify an object.
  Fixes ClassCastExceptions when deserializing very large objects containing tens of thousands
  other objects.

8.46

- BYPS-49: Manage Java 8 version in master branch. Currently, java.net.http.HttpClient is not
  worth for tracking two release branches.

- BYPS-48: Make sure to close the stream in BContentStream.materialize to release the PUT request after 
  all bytes have been read. 
  
8.45

- BYPS-47: Content-Length=Long.MAX has to be interpreted as unknown stream size. 

8.43

- BYPS-43: Exchange stream several times between server and client failed.
  Technically, HIncomingStreamSync did not reset the stream in function cloneStream.

- BYPS-44: Headers Content-Type and Content-Length were lost during upload for non-BContentStream streams.

- BYPS-42: Close Apache HTTP client when transport layer is closed.

- BYPS-40: Provide separate BYPS libraries for Java 8 and 11. BYPS 8.x is for Java 8 and
  BYPS 11.x is for Java 11+. BYPS 11.x can use java.net.http.HttpClient.

- BYPS-39, BYPS-45: Avoid obsolete completion of async context in putStream in case of an error.
  Print the error stack trace into the log.

- BYPS-36: Send messages in format application/byps and application/json compressed with GZIP 
  if client accepts gzip encoding. Tomcat is responsible to set the correct content-length header for 
  zipped content.

5.42

- BYPS-34: Added jaxb implementation to bypsgen.jar to simplify gradle build scripts.

5.41

- BYPS-33: Clients received 401 for every request if the HTTP session cookie was expired and 
  authentication is not required for using the server. This was a side effect of BYPS-19.

5.40 

- BYPS-31: bypsgen produced .class files in source directory.

5.39

- BYPS-32: More logging output for processing incoming streams.

- BYPS-30: Communication via STDIO between client and server.

5.38

- BYPS-29: Uploading data to the server required the client to provide 10MB of data in a given time span.
  In case that time span did not suffice the upload failed. If you expect to run in such a situation you
  can wrap BAsyncContentStream around your InputStream to continuously upload data in packages that may be
  smaller than 10MB. Also, after reaching the end of the stream, an extra package must be sent to notify
  the server about the end. 

5.37

- BYPS-28: Upload example of ELOix caused NPE since it does not pass a BMessageHeader during file upload. 
  The JSESSIONID cookie has to be evaluated to detect the session. 

5.36

- BYPS-27: Do not limit session lifetime in HSessinListener because this class is instantiated
  by all web applications even those that should only use the client side of BYPS.

5.35

- BYPS-26: Node.js could not connect anymore after BYPS-19 since it does not maintain the session cookie. Set 
  system property -Dbyps.http.sessionCookieRequired=false in order to support Node.js.
  
- BYPS-19a: Fix NPE in HSession(), create HttpSession object if not available. 
  
5.34

- BYPS-22: Generate function BSerialier_class.prepareForLazyLoading to assign BValueClass.bypsClient 
  in a tree of serializable objects. 
  Generator arguments OPT_* were ignored.
  Added annotation @BIgnore to allow ignore classes or interfaces.
  Fat JAR for BYPS generator: bypsgen. Write log file bypsgen.log into current directory.
  
- BYPS-24: Function HHttpSessionObject.getFirstBysSessionOrNull() re-created. It was removed with BYPS-19 but is in use.

- BYPS-25: Removed javadoc references from BYPS generator.

5.33

- BYPS-19: Accept BYPS sessions only in conjunction with application server sessions.

- BYPS-21: Generator produced wrong constant value of type long for C# if the value did not
  fit into a double, e.g. 2196631268005773311L was generated as 2196631268005773312L.

5.32

- BYPS-18: Allow to set HTTP session cookie to enable SAML and OAuth for ELO Indexserver. 

5.31

- BYPS-17: Generator for the JSON serialization skips transient fields.

- BYPS-16: Replace commons-logging with slf4j, additionally support logback. 

5.29.4

- BYPS-13: Non-static enum members led to errors in bypsgen's compatibility check.

- BYPS-14: Suppress bypsgen warnings "An illegal reflective access operation has occurred".

5.29.3

- BYPS-11: Stream with unknown content length was not entirely uploaded if first stream part was less than 10000 bytes.

5.29.2

- BYPS-12: Logout of one session cancelled all messages of all sessions. 
  This effect was caused by changes in BYPS-9.

5.29.1

- BYPS-9: Avoid TCP errors when uploading large streams.

- Allow to replace serializers.

5.29

- BYPS-10: Generate code using annotation processor. JDK 13 compatible.

5.28

- BYPS-1: Generator runs on Java 12.

- BYPS-5: Stream properties (Content-Type, Content-Length, etc.) were not properly set 
  if stream exchanged between clients and servers.
  
- BYPS-7: Simultaneous re-login via Apache HTTP Client could cause socket errors.

- BYPS-8: Content-Disposition (file name) was not read by Apache HTTP Client.

5.25

- Use WinHttpClient for requests with ApacheHttpClient (Option -Dbyps.http.client.factory=byps.http.client.asf.AsfClientFactory).

5.24

- No retry of HTTP requests.   

5.23

- Generator does not delete a directory if we expect files to remain.

5.21 

- Allow to lazy-load elements of BValueClass objects.

- Take serialVersionUID of BRemote interfaces into account.

- Generate JS definition also for serializable classes with no members.

- Ignore .gitignore files in output directory. 

5.20

- Provide JSESSIONID via HWireClient.getHttpClient().getHttpSession()

5.19 

- Allow to send methods without applying authentication. Therefore, BTransport.send is public now.

- Generator checks whether constant value is null.

- Fix potential BufferOverflowException when serializing streams and stubs. EIX-1145.

5.18 2018-07-19

- Generator can be run under Java 10. 

5.17 2018-05-07

- Infinite read timeout for long poll was ignored. This caused timeout exceptions in HServerR.

5.16 2018-03-29

- Java 1.6 source compatibility.

- Dump headers and body if request cannot be processed.

- Fix error "Null values must not be mapped" in C# deserialization.

5.15 2017-02-01

- Do not invalidate the HTTP session, if no BYPS session could be found.

5.14 2017-12-28

- Filter empty cookies before calling CookieManager.put to prevent SEVERE log entry.

- Allow relative URLs in JSON API.

- Allow to send additional request headers.

- On MacOS, ensure that mime types are found for file extensions.

- Fix empty method results in JSON API when re-login and executed synchronously.

- BAuthentication in JSON API has to return method results via asyncResult object even 
  if executed synchronously.
 
- C# uses .NET Framework 4.5

5.13

- Do not retry requests on SocketTimeoutException


5.10 2017-02-21

 - HTTP connection and read timeout values were not applied. 